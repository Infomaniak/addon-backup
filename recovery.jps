type: update
name: Add-on restauration
globals:

  pass: ${fn.md5([user.uid])}
  

onBeforeInit: |
      var resp = jelastic.environment.control.GetEnvs(appid, session);
      if (resp.result != 0) return resp;
      var values = {};

      var ids = [];    
      for (var i = 0; envInfo = resp.infos[i]; i++) {
        for (var j = 0; node = envInfo.nodes[j]; j++) {
          ids.push(node.adminUrl); 
        }
      }
      for (var x = 0, n = ids.length; x < n; x++) {
        values[ids[x]] = ids[x];
       }

      return {
      result: 0,
      settings: {
        fields: [{
          name: "dashoard_url",
          caption: "Nodes contains snapshots",
          type: "list",
          required: true,
          editable: true,
          values: values
        }, {
          "name": "User",
          "caption": "User name",
          "type": "string",
          "required": true,
          "default": "SBI-AJ891787"
        }, {
          "name": "key",
          "caption": "Password",
          "type": "string",
          "required": false,
          "inputType" : "password"
        }, {
          "name": "destination",
          "caption": "Restauration enplacement",
          "type": "string",
          "required": true,
          "placeholder" : "/user/folder/"
        }
      ]}
      }
      
targetNodes:

  nodeGroup: '*'

onInstall:

  - cmd[${settings.node}]: |-
        
            wget -O restic.bz2 https://github.com/restic/restic/releases/download/v0.9.5/restic_0.9.5_linux_amd64.bz2

            bunzip2 restic.bz2

            chmod +x restic

            mv restic /usr/bin/

            restic self-update

            mkdir /root/.config/

            mkdir /root/.config/swissbackup/

            touch /root/.config/swissbackup/openrc2.sh
            
            > /root/.config/swissbackup/openrc2.sh

            touch /root/.config/swissbackup/secret.txt

            password=${globals.pass}

            if [ ! -s /root/.config/swissbackup/secret.txt ]; then echo "$password" >> /root/.config/swissbackup/secret.txt; else echo "nothing"; fi

            echo "export OS_AUTH_URL="https://swiss-backup.infomaniak.com/identity/v3"" >> /root/.config/swissbackup/openrc2.sh

            echo "export OS_REGION_NAME="RegionOne"" >> /root/.config/swissbackup/openrc2.sh

            echo "export OS_PROJECT_NAME="sb_project_${settings.User}"" >> /root/.config/swissbackup/openrc2.sh

            echo "export OS_PASSWORD="${settings.key}"" >> /root/.config/swissbackup/openrc2.sh

            echo "export OS_USER_DOMAIN_NAME="default"" >> /root/.config/swissbackup/openrc2.sh

            echo "export OS_USERNAME="${settings.User}"" >> /root/.config/swissbackup/openrc2.sh

            echo "export OS_PROJECT_DOMAIN_NAME="default"" >> /root/.config/swissbackup/openrc2.sh

            echo "export RESTIC_REPOSITORY="swift:sb_project_${settings.User}:/Jelastic-${settings.nodes}"" >> /root/.config/swissbackup/openrc2.sh

            echo "export RESTIC_PASSWORD_FILE=/root/.config/swissbackup/secret.txt" >> /root/.config/swissbackup/openrc2.sh

            . /root/.config/swissbackup/openrc2.sh

            curl -fsS https://raw.githubusercontent.com/axelJacquet/addon-backup/master/recovery.sh --output recovery.sh

            chmod +x recovery.sh

            ./recovery.sh -i "${settings.id}" -d ${settings.destination}

    user: root

responses:
  4109:
    type: error
    message: Les ID renseignés ( ${settings.id} ) sont invalides, veuillez vérifier votre saisie.
   
