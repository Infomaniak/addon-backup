type: update
name: Add-on backup
baseUrl: https://raw.githubusercontent.com/axelJacquet/addon-backup/master/

globals:

  pass: ${fn.md5([user.uid])}
  
targetNodes:

  nodeGroup: '*'

onInstall:

 - script: credentials.cs

 - cmd[${settings.node}]: |-

          wget -O restic.bz2 https://github.com/restic/restic/releases/download/v0.9.5/restic_0.9.5_linux_amd64.bz2

          bunzip2 restic.bz2

          chmod +x restic

          mv restic /usr/bin/

          restic self-update

          touch /tmp/openrc.sh

          > /tmp/openrc.sh

          touch /tmp/secret.txt

          password=${globals.pass}

          if [ ! -s /tmp/secret.txt ]; then echo "$password" >> /tmp/secret.txt; else echo "nothing"; fi

          echo "export OS_AUTH_URL="https://swiss-backup.infomaniak.com/identity/v3"" >> /tmp/openrc.sh

          echo "export OS_REGION_NAME="RegionOne"" >> /tmp/openrc.sh

          echo "export OS_PROJECT_NAME="sb_project_${settings.User}"" >> /tmp/openrc.sh

          echo "export OS_PASSWORD="${settings.key}"" >> /tmp/openrc.sh

          echo "export OS_USER_DOMAIN_NAME="default"" >> /tmp/openrc.sh

          echo "export OS_USERNAME="${settings.User}"" >> /tmp/openrc.sh

          echo "export OS_PROJECT_DOMAIN_NAME="default"" >> /tmp/openrc.sh

          echo "export RESTIC_REPOSITORY="swift:sb_project_${settings.User}:/Jelastic-$(hostname -a)"" >> /tmp/openrc.sh

          echo "export RESTIC_PASSWORD_FILE=/tmp/secret.txt" >> /tmp/openrc.sh

          . /tmp/openrc.sh

          restic check || restic -r swift:sb_project_${settings.User}:/Jelastic-$(hostname -a) init

          touch /run/user/restic.lock

          touch /tmp/Backups_plan
          
   user: root
   
 - if ('${settings.sauvegarde}' == 'hourly' ): hourly
 
 - if ( '${settings.sauvegarde}' == 'daily' ): daily    
   
actions:
 
  hourly:

      cmd [${settings.node}]:

              - curl -fsS https://raw.githubusercontent.com/axelJacquet/addon-backup/master/hourly-all.sh --output hourly-all.sh

              - chmod u+x hourly-all.sh

              - if [ -f "/var/spool/cron/crontabs/root" ]; then sed -i '/restic.lock/d' /var/spool/cron/crontabs/root; elif [ -f "/var/spool/cron/root" ]; then sed -i '/restic.lock/d' /var/spool/cron/root; else echo "first install"; fi

              -  crontab -u root -l | { cat; echo "0 */1 * * * /usr/bin/flock --nonblock --conflict-exit-code 0 /run/user/restic.lock /root/hourly-all.sh >> /var/log/myjob.log 2>&1 "; } | crontab -

      user: root

  daily:

      cmd [${settings.node}]:

              - curl -fsS https://raw.githubusercontent.com/axelJacquet/addon-backup/master/daily-all.sh --output daily-all.sh

              - chmod u+x daily-all.sh

              - if [ -f "/var/spool/cron/crontabs/root" ]; then sed -i '/restic.lock/d' /var/spool/cron/crontabs/root; elif [ -f "/var/spool/cron/root" ]; then sed -i '/restic.lock/d' /var/spool/cron/root; else echo "first install"; fi

              -  crontab -u root -l | { cat; echo "0 23 * * * /usr/bin/flock --nonblock --conflict-exit-code 0 /run/user/restic.lock /root/daily-all.sh " >> /var/log/myjob.log 2>&1 "; } | crontab -

      user: root
