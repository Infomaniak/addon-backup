type: update

name: SwissBackup

settings:

  fields:

  - name: emplacement

    caption: Emplacement Swiss-Backup

    type: string

    required: true

    default: sb_project_SBI-AJ891787

  - name: User

    caption: Nom utilisateur

    type: string

    required: true

    default: SBI-AJ891787

  - name: key

    caption: Clé de l'utilisateur

    type: string

    required: true

    default:

  - name: path

    caption: Répertoires à Backuper

    type: string

    placeholder: path/to/folder1/, path/to/folder2/, path/to/folderX


    required: true

  - type: radiolist

    caption: Politique de sauvegarde

    name: sauvegarde

    values:

      hourly: Sauvegardes toutes les heures
      daily: Sauvegardes journalières

    default: hourly

    required: true

    showIf:
      hourly:
        name: cmd
        type: text
        height: 65
        required: true
        hideLabel: true
        default: |-
          Hourly backups:
          0 */1 * * *	/folder1/, /fodler2/, /folderX/
          Monthly: 6 months	les 6 derniers de chaque mois (30 ou 31 a 23h)
          Weekly: 4 weeks	les 4 derniers dimanches a 23h
          Daily: 7 days	les 7 derniers qui ont eu lieu a  23h
          Hourly: 24 Hours	les 23 derniers de chaque heure
      daily:
        name: cmd
        type: text
        height: 65
        required: true
        hideLabel: true
        default: |-
          Daily backups:
          0 23 * * *	/folder1/, /fodler2/, /folderX/
          Monthly: 6 months	les 6 derniers de chaque mois (30 ou 31 a 23h)
          Weekly: 4 weeks	les 4 derniers dimanches a 23h
          Daily: 7 days	les 7 derniers qui ont eu lieu a  23h

    hideLabel: false


targetNodes:

  nodeGroup: '*'



onInstall:


  - cmd[${targetNodes.nodeGroup}]: |-

      test=$(echo ${settings.path} | tr  ',' ' ' )
      for i in ${test}"" ; do

      if [ -d "$i" ]

       then

        echo "Directory "$i" exists."

      else

       for p in ${test}"" ; do



         if [ ! -d "$p" ]



          then

              echo "Error: Directory "$p" does not exists."  >> /root/bad.dirs

         fi

         done

        exit 1

       fi
      done

      wget -O restic.bz2 https://github.com/restic/restic/releases/download/v0.9.5/restic_0.9.5_linux_amd64.bz2
      bunzip2 restic.bz2
      chmod +x restic
      mv restic /usr/bin/
      restic self-update
      touch /tmp/openrc.sh
      > /tmp/openrc.sh
      touch /tmp/secret.txt
      password="${user.appPassword}"
      if [ ! -s /tmp/secret.txt ]; then eval "echo $password >> /tmp/secret.txt"; else echo "nothing"; fi
      echo "export OS_AUTH_URL="https://swiss-backup.infomaniak.com/identity/v3"" >> /tmp/openrc.sh
      echo "export OS_REGION_NAME="RegionOne"" >> /tmp/openrc.sh
      echo "export OS_PROJECT_NAME="${settings.emplacement}"" >> /tmp/openrc.sh
      echo "export OS_PASSWORD="${settings.key}"" >> /tmp/openrc.sh
      echo "export OS_USER_DOMAIN_NAME="default"" >> /tmp/openrc.sh
      echo "export OS_USERNAME="${settings.User}"" >> /tmp/openrc.sh
      echo "export OS_PROJECT_DOMAIN_NAME="default"" >> /tmp/openrc.sh
      echo "export RESTIC_REPOSITORY="swift:${settings.emplacement}:/$(hostname -a)"" >> /tmp/openrc.sh
      echo "export RESTIC_PASSWORD_FILE=/tmp/secret.txt" >> /tmp/openrc.sh
      . /tmp/openrc.sh
      restic check || restic -r swift:sb_project_SBI-AJ891787:/$(hostname -a) init
      touch /run/user/restic.lock
      touch /tmp/Backups_plan


    user: root


  - if ('${settings.sauvegarde:}' == 'hourly' ): hourly

  - if ( '${settings.sauvegarde:value2}' == 'daily' ): daily
responses:
  4109:
    type: error
    message: Vos dossiers sont faux regardé dans /tmp/fails-folders



actions:

  hourly:
      cmd [${targetNodes.nodeGroup}]:
              - curl -fsS https://raw.githubusercontent.com/axelJacquet/addon-backup/master/hourly.sh --output hourly.sh
              - chmod u+x hourly.sh
              - if [ -f "/var/spool/cron/crontabs/root" ]; then sed -i '/restic.lock/d' /var/spool/cron/crontabs/root; elif [ -f "/var/spool/cron/root" ]; then sed -i '/restic.lock/d' /var/spool/cron/root; else echo "first install"; fi
              -  crontab -u root -l | { cat; echo "0 */1 * * * /usr/bin/flock --nonblock --conflict-exit-code 0 /run/user/restic.lock /root/hourly.sh -f \"${settings.path}\" >> /var/log/myjob.log 2>&1 "; } | crontab -




      user: root



  daily:
      cmd [${targetNodes.nodeGroup}]:
              - curl -fsS https://raw.githubusercontent.com/axelJacquet/addon-backup/master/daily.sh --output daily.sh
              - chmod u+x daily.sh
              - if [ -f "/var/spool/cron/crontabs/root" ]; then sed -i '/restic.lock/d' /var/spool/cron/crontabs/root; elif [ -f "/var/spool/cron/root" ]; then sed -i '/restic.lock/d' /var/spool/cron/root; else echo "first install"; fi
              -  crontab -u root -l | { cat; echo "0 23 * * * /usr/bin/flock --nonblock --conflict-exit-code 0 /run/user/restic.lock /root/daily.sh -f \"${settings.path}\" >> /var/log/myjob.log 2>&1 "; } | crontab -





      user: root


success:

  text: success!! Voici le mot de passe de votre emplacement Swift crypté, gardez le précieusement.

  mail: Voici le mot de passe de votre emplacement Swift crypté, gardez le précieusement.
